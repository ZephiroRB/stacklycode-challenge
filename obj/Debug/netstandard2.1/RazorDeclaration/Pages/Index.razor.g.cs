#pragma checksum "E:\code\projects\stacklycode-challenge\stacklycode-challenge\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d804a37a4c1d34aee7f99e6568f6a164589054df"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace stacklycode_challenge.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using stacklycode_challenge;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\_Imports.razor"
using stacklycode_challenge.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\Pages\Index.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 122 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\Pages\Index.razor"
            

    public string City { get; set; }


    public bool Fulltime { get; set; }




    protected override async Task OnInitializedAsync()
    {
        githubResponses = await Http.GetFromJsonAsync<GithubResponse[]>($"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=1&search=java&location=");


    }


    private async Task SearchData()
    {
        string Fulltime2 = "false";

        if (@Fulltime)
        {
            Fulltime2 = "true";
        }

        if (@message.Count > 0)
        {
        string combindedString = string.Join(",", @message);

        githubResponses = await Http.GetFromJsonAsync<GithubResponse[]>($"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=1&search={@CurrentSearch}&location={@combindedString}&full_time={Fulltime2}");

        }
        else
        {

        githubResponses = await Http.GetFromJsonAsync<GithubResponse[]>($"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?page=1&search={@CurrentSearch}&location=&full_time={Fulltime2}");




        }

}


string GetPrettyDate(string DateString)
{

Console.WriteLine("iString -" + DateString.Replace(" UTC ", " ") + "-");

DateTime dx = DateTime.ParseExact(DateString.Replace(" UTC ", " "), "ddd MMM dd HH:mm:ss yyyy", CultureInfo.InvariantCulture);


// 1.
// Get time span elapsed since the date.
TimeSpan s = DateTime.Now.Subtract(dx);

// 2.
// Get total number of days elapsed.
int dayDiff = (int)s.TotalDays;

// 3.
// Get total number of seconds elapsed.
int secDiff = (int)s.TotalSeconds;

// 4.
// Don't allow out of range values.
if (dayDiff < 0 || dayDiff >= 31)
{
return null;
}

// 5.
// Handle same-day times.
if (dayDiff == 0)
{
// A.
// Less than one minute ago.
if (secDiff < 60)
{
 return "just now";
}
// B.
// Less than 2 minutes ago.
if (secDiff < 120)
{
 return "1 minute ago";
}
// C.
// Less than one hour ago.
if (secDiff < 3600)
{
 return string.Format("{0} minutes ago",
     Math.Floor((double)secDiff / 60));
}
// D.
// Less than 2 hours ago.
if (secDiff < 7200)
{
 return "1 hour ago";
}
// E.
// Less than one day ago.
if (secDiff < 86400)
{
 return string.Format("{0} hours ago",
     Math.Floor((double)secDiff / 3600));
}
}
// 6.
// Handle previous days.
if (dayDiff == 1)
{
return "yesterday";
}
if (dayDiff < 7)
{
return string.Format("{0} days ago",
 dayDiff);
}
if (dayDiff < 31)
{
return string.Format("{0} weeks ago",
 Math.Ceiling((double)dayDiff / 7));
}
return null;
}

#line default
#line hidden
#nullable disable
#nullable restore
#line 257 "E:\code\projects\stacklycode-challenge\stacklycode-challenge\Pages\Index.razor"
       

    public GithubResponse[] githubResponses;

    public class GithubResponse
    {
        public string Id { get; set; }

        public string Title { get; set; }

        public string Type { get; set; }

        public string Company { get; set; }

        public string Company_Logo { get; set; }

        public string Created_At { get; set; }

        public string Location { get; set; }
    }


    private string CurrentSearch { get; set; }

    List<string> message = new List<string>();


    void SetFilters(string newMessage)
    {
        message.Add(newMessage);
    }





#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
